<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<properties>
        <btoa.build.version>10.10.180</btoa.build.version> <!-- write here the build number: 9.60.130  /  9.60.00-SNAPSHOT-->
        <spring.version>3.0.5.RELEASE</spring.version>
        <slf4j.version>1.5.6</slf4j.version>
		<src.resources>${basedir}/src/resources</src.resources>
		<target.preassembly>${basedir}/target/${project.artifactId}-web</target.preassembly>
		<target.resources>${target.preassembly}/WEB-INF/classes</target.resources>
    </properties>
	<description>An HP Anywhere starter project that generates an App using the Angular framework. This project is targeted for use on tablets and smartphones.</description>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hp.my.miniapp</groupId>
    <artifactId>Shine</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>
    <name>${project.artifactId}-web</name>

    <build>
	
	
	<pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-5</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
	
	<sourceDirectory>${basedir}/src/java</sourceDirectory>		
 
        <finalName>${project.artifactId}-web</finalName> 
		<plugins>	
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
				  <execution>
					<phase>initialize</phase>
					<goals>
					  <goal>read-project-properties</goal>
					</goals>
					<configuration>
					  <files>
						<file>pom-project.properties</file>
					  </files>
					</configuration>
				  </execution>
				</executions>
			</plugin>		
					
			<plugin>
				<groupId>com.googlecode.mavenfilesync</groupId>
				<artifactId>maven-filesync-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<defaultDestination>BTOA_HOME/tomcat/webapps/${project.name}</defaultDestination>
							<mappings>
								<mapping>
									<sourceFolder>src/webapp</sourceFolder>
									<destinationFolder>BTOA_HOME/tomcat/webapps/${project.name}</destinationFolder>
									<exclPatternList> 
										<exclude>WEB-INF/web.xml</exclude>
									</exclPatternList>
								</mapping>
							</mappings>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
				
			 
				<plugin>
					   <artifactId>maven-compiler-plugin</artifactId>
					   <version>2.0.2</version>
					   <configuration>
							  <source>1.7</source>
							  <target>1.7</target>
					   </configuration>
				 </plugin>
				 
				
				 <plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-eclipse-plugin</artifactId>
					   <version>2.9</version>
					   <configuration>

							  <jeeversion>6.0</jeeversion>
							  <wtpversion>2.0</wtpversion>
							  <additionalBuildcommands>
								<buildcommand>com.hp.ee.miniapp.project.wizard.ConfigurationsBuilder</buildcommand>
							  </additionalBuildcommands>
							  <additionalProjectnatures>
									 <projectnature>com.hp.ee.project.wizard.natures.anywhere</projectnature>
									 <projectnature>org.eclipse.jst.j2ee.web.WebNature</projectnature>
							  </additionalProjectnatures>
							  <additionalProjectFacets>
								<wst.jsdt.web>1.0</wst.jsdt.web>
							  </additionalProjectFacets>
							  <wtpContextName>ROOT</wtpContextName>
							  <wtpdefaultserver>Local HP Anywhere Server</wtpdefaultserver>
					   </configuration>

				 </plugin>
		
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.4</version>
					<executions>
					  <execution>
						
						<phase>prepare-package</phase>
						<configuration>
						  <tasks>
							<echo message="processing files... ${basedir}" />
						
							<!-- mkdir dir="${target.preassembly}" / -->
							<copy todir="${target.preassembly}" outputencoding="UTF-8" encoding="UTF-8">
								<fileset dir="${basedir}/src/webapp" />						
							 </copy>
							 
							<copy todir="${target.resources}" flatten="true">
								<fileset dir="${src.resources}">	
									<include name="l10n/*.properties" />
									<include name="log/*.properties" />
									<include name="*descriptor*.xml" />
								</fileset>
							 </copy>
							
							<copy todir="${target.resources}" flatten="true">
							<fileset dir="${env.TEMP}\${project.artifactId}\clean">	
									<include name="${project.artifactId}-ds-provider.xml" />
								</fileset>
							 </copy>
							 
						  </tasks>
						</configuration>
						<goals>
						  <goal>run</goal>
						</goals>
					  </execution>
					</executions>
			  </plugin>
		  		  
			  <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0</version>
				<configuration>
				  <webResources>
					<resource>
						<!-- copy resources from this folder into the webapp before packaging -->
					  <directory>${target.preassembly}</directory>
					</resource>					
				  </webResources>
				</configuration>
			 </plugin>
		  
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
				  <execution>
					<id>add-it-source</id>
					<phase>process-resources</phase>
					<goals>
					  <goal>add-source</goal>
					</goals>
					<configuration>
					  <sources>
						<source>${basedir}/src/java</source>
					  </sources>
					</configuration>
				  </execution>
				</executions>
			</plugin>	

			<plugin>
			   <artifactId>maven-assembly-plugin</artifactId>
			<version>2.3</version>
			  <configuration>
			   <finalName>${project.artifactId}</finalName>
				<descriptors>
				  <descriptor>assembly-zip.xml</descriptor>
				</descriptors>
			  </configuration>
			  <executions>
				<execution>
				  <id>make-assembly</id>
				  <phase>package</phase>
				  <goals>
					<goal>single</goal>
				  </goals>
				</execution>
			  </executions>
			</plugin>			
			
		</plugins>
    </build>
   
	<profiles>

	<!--
		<profile>
			<id>minify</id>
			<activation>
				<property>
				<name>minify</name>
			  </property>
			  <activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
				     <plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<executions>
				  <execution>
				  <phase>process-resources</phase>
					<goals>
					  <goal>compress</goal>
					</goals>
					<configuration>
					<outputDirectory>${basedir}/target/${project.artifactId}-web</outputDirectory>
					<webappDirectory>${basedir}/src/webapp</webappDirectory>
					<sourceDirectory>${basedir}/src/webapp</sourceDirectory>
					<suffix>.min</suffix>
					 <excludes>
						<exclude>**/*.js</exclude>
					</excludes>
					</configuration>
				  </execution>
				</executions>        
			</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<configuration></configuration>
						<executions>
							<execution>
								<id>minify-id</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${basedir}</workingDirectory>
									<executable>cmd.exe</executable>
									<arguments>
										<argument>/c</argument>
										<argument>minify.bat</argument>
										<argument>${miniapp.prop.build.type}</argument>
										<argument>${miniapp.prop.build.target.folder}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
	-->   
		   
			<profile>
				 <id>Deploy-App</id>

				 <activation>
					   <property>
							  <name>deploy-miniapp</name>
					   </property>
				 </activation>
				 <build>
					   <plugins>
<!--	
	<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<executions>
				  <execution>
				  <phase>process-resources</phase>
					<goals>
					  <goal>compress</goal>
					</goals>
					<configuration>
					<outputDirectory>${basedir}/target/${project.artifactId}-web</outputDirectory>
					<webappDirectory>${basedir}/src/webapp</webappDirectory>
					<sourceDirectory>${basedir}/src/webapp</sourceDirectory>
					<suffix>.min</suffix>
					 <excludes>
						<exclude>**/*.js</exclude>
					</excludes>
					</configuration>
				  </execution>
				</executions>        
			</plugin>
-->
								<plugin>
									<groupId>com.hp.ee</groupId>
									<artifactId>configuration-extract</artifactId>
									<version>10.00.00-SNAPSHOT</version>
									<executions>
										 <execution>
											<id>processing configuration files</id>
											<phase>compile</phase>
											<goals>
												<goal>clean-settings-values</goal>
											</goals>
										</execution>
										
										<execution>
											<id>UpdatingLocalCatalogToNONE</id>
											<phase>compile</phase>
											<goals>
												<goal>set-local-catalog-value</goal>
											</goals>
										</execution>
										
									</executions>
									<configuration>
										<miniAppId>${project.artifactId}</miniAppId>
										<userName>${user}</userName>
										<password>${password}</password>
										<serverName>${host}</serverName>
										<serverPort>${port}</serverPort>
										<mode>NONE</mode>
									</configuration>
							</plugin>
									
							  <plugin>
									 <groupId>org.codehaus.mojo</groupId>
									 <artifactId>exec-maven-plugin</artifactId>
									 <version>1.2.1</version>
									  <executions>
<!--
									  <execution>
								<id>minify-id</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${basedir}</workingDirectory>
									<executable>cmd.exe</executable>
									<arguments>
										<argument>/c</argument>
										<argument>minify.bat</argument>
										<argument>${miniapp.prop.build.type}</argument>
										<argument>${miniapp.prop.build.target.folder}</argument>
									</arguments>
								</configuration>
							</execution>
-->

										<execution>
												   <id>Deploying MiniApp (${env.BTOA_HOME}/scripts/deployMiniApp.sh)</id>
												   <phase>verify</phase>
												   <goals>
														  <goal>exec</goal>
												   </goals>
												   <configuration>
												   		 
														  <executable>${env.BTOA_HOME}/scripts/deployMiniApp.sh</executable>
														  <workingDirectory>${env.BTOA_HOME}/scripts</workingDirectory>
														  <arguments>
																 
																 <argument>${zipLocation}</argument>
																 <argument>${user}</argument>
																 <argument>${password}</argument>
																 <argument>${host}</argument>
																 <argument>${port}</argument>
																 
														 </arguments>
														  
												   </configuration>
									</execution>

											<execution>
								<id>Update User Setting</id>
								  <phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${curlPath}</executable>
									 <workingDirectory>${env.BTOA_HOME}/scripts</workingDirectory>
									<arguments>
									   
										<argument>-f</argument>
										<argument>--header</argument>
										<argument>X-CSRF-HPMEAP:HPA-Admin</argument>
										<argument>--noproxy</argument>
										<argument>${host}</argument>
										<argument>-X</argument>
										<argument>PUT</argument>
										<argument>-F</argument>
										<argument>application=@${env.TEMP}/${project.artifactId}/full/${project.artifactId}-user-settings.xml</argument>
										<argument>http://${user}:${password}@${host}:${port}/diamond/rest/api/V2/setting/updateUserSetting/${project.artifactId}</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>Update Admin Setting</id>
								 <phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${curlPath}</executable>
									<workingDirectory>${env.BTOA_HOME}/scripts</workingDirectory>
									<arguments>
										
										<argument>-f</argument>
										<argument>--header</argument>
										<argument>X-CSRF-HPMEAP:HPA-Admin</argument>
										<argument>--noproxy</argument>
										<argument>${host}</argument>
										<argument>-X</argument>
										<argument>PUT</argument>
										<argument>-F</argument>
										<argument>application=@${src.resources}/${project.artifactId}-admin-settings.xml</argument>
										<argument>http://${user}:${password}@${host}:${port}/diamond/rest/api/V2/setting/updateAdminSetting/${project.artifactId}</argument>
									</arguments>
								</configuration>
							</execution>
							
							<execution>
								<id>Update DataSource Provider Values (${curlPath} -f -v --header "X-CSRF-HPMEAP:HPA-Admin" --header "Content-Type:application/json" --noproxy localhost -X PUT -d @${src.resources}\${project.artifactId}-full-ds-provider.json http://${user}:${password}@${host}:${port}/diamond/rest/api/V2/datasources/${project.artifactId}?nested=true )</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${curlPath}</executable>
									<arguments>
										<argument>-f</argument>
									  	<argument>--header</argument>
										<argument>X-CSRF-HPMEAP:HPA-Admin</argument>
										<argument>--header</argument>
										<argument>Content-Type:application/json</argument>
										<argument>--noproxy</argument>
										<argument>${host}</argument>
										<argument>-X</argument>
										<argument>PUT</argument>
										<argument>-d</argument>
										<argument>@${env.TEMP}/${project.artifactId}/full/${project.artifactId}-ds-provider.json</argument>
										<argument>http://${user}:${password}@${host}:${port}/diamond/rest/api/V2/datasources/${project.artifactId}-DS?nested=true</argument>
									</arguments>
								</configuration>
							</execution>
																					
							</executions>
							  </plugin>
				
						    
						</plugins>
				 </build>
			</profile>
      </profiles>
   
   
    <dependencies>
			<!-- BTOA Framework artifacts -->
			
			<dependency>
			  <groupId>com.hp.btoaw</groupId>
			  <artifactId>integration-framework-api</artifactId>
			  <version>${btoa.build.version}</version>
			  <classifier>javadoc</classifier>
			   <scope>provided</scope>
		   </dependency>
		   
		   <dependency>
			  <groupId>com.hp.btoaw</groupId>
			  <artifactId>integration-model</artifactId>
			  <version>${btoa.build.version}</version>
			  <classifier>javadoc</classifier>
			   <scope>provided</scope>
		   </dependency>
		   
           <dependency>
                <groupId>com.hp.btoaw</groupId>
                <artifactId>integration-model</artifactId>
                <version>${btoa.build.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.hp.btoaw</groupId>
                <artifactId>integration-framework-api</artifactId>
                <version>${btoa.build.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.hp.btoaw</groupId>
                <artifactId>miniapp-framework-web</artifactId>
                <version>${btoa.build.version}</version>
                <type>war</type>
            </dependency>

			<!-- Spring dependencies required by the miniapp framework -->			
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
            </dependency>

			<dependency>
				<groupId>com.hp.btoaw</groupId>
				<artifactId>diamond-tenant</artifactId>
				<version>${btoa.build.version}</version>
				<scope>provided</scope>
			</dependency>
		
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.0.0.GA</version>
				 
			</dependency>
		
            <!-- Test artifacts-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.2</version>
                <scope>test</scope>
            </dependency>

			<!-- Jersey -->
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-server</artifactId>
				<version>1.8</version>
				 
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-json</artifactId>
				<version>1.5</version>
			</dependency>	

			<!--
			<dependency>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.3.2</version>
			</dependency>			
			 	-->		
    </dependencies>
 
	 <!-- This points to EE's repository, so that it could be immediately built for demo.demo purposes.
		You should replace it with your group's repository.
		Talk to your build manager to ensure your "public" group has access to
		EE's repositories which are currently at:
		- http://16.44.48.196:8080/nexus/content/repositories/btoaw-releases/
	-->
 
	 <repositories>
		 <repository>
                <id>local-repo</id>
                <url>file://${env.BTOA_HOME}/repository</url>
            </repository>
			
			<repository>
                <id>hp</id>
                <name>HP Anywhere</name>
                <layout>default</layout>
                <url>https://a248.e.akamai.net/cdn.hpcloudsvc.com/h702392c9622cd79fb583155ddfedf6c9/prodaw2/repository</url>
            </repository>
			
            <repository>
                <id>central</id>
                <name>Maven Repository Switchboard</name>
                <layout>default</layout>
                <url>http://repo1.maven.org/maven2</url>
            </repository>
     
        </repositories>

        <pluginRepositories>
		
		<pluginRepository>
                <id>local-plugin</id>
                <url>file:///${env.BTOA_HOME}/repository</url>
                <layout>default</layout>
            </pluginRepository>
			<pluginRepository>
                <id>hp</id>
                <name>HP Plugin Repository</name>
                <url>https://a248.e.akamai.net/cdn.hpcloudsvc.com/h702392c9622cd79fb583155ddfedf6c9/prodaw2/repository</url>
                <layout>default</layout>
            </pluginRepository>
			<pluginRepository>
                <id>central</id>
                <name>Maven Plugin Repository</name>
                <url>http://repo1.maven.org/maven2</url>
                <layout>default</layout>
            </pluginRepository>
        </pluginRepositories>
 

	
</project>
